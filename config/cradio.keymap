// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "includes/behaviors.dtsi" // Home-row mods, ...
#include "includes/macros.dtsi"    // Accent macros
#include <dt-bindings/zmk/bt.h>

#define DEF_L 0
#define ODK 1
#define NAV_L 2
#define NUM_L 3
#define SYM_L 4
#define FN_L 5
#define HYP(key) LS(LC(LA(LG(key))))
#define MEH(key) LS(LC(LA(key)))

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <175>; };

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp C      &kp O      &kp P      &kp W          &kp J      &kp M      &kp D      &odkexc    &kp Y
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &lt FN_L A &hml LALT S &hml LCTRL E &hml LGUI N &kp F    &kp L      &hmr RGUI R &hmr RCTRL T &hmr LALT I &kp U
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &dashion   &kp V      &kp B          &pecol     &kp H      &kp G      &comacol   &kp K
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                         &sk LSHFT  &lt NAV_L BSPC    &lt NUM_L SPACE  &lt SYM_L TAB
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        odk {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &a_circ   &kp RA(C)    &kp LA(Q)    &o_circ     &trans        &trans        &trans        &kp UNDER     &kp LA(U) &u_circ
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &a_grave  &e_acute     &e_grave     &e_circ     &trans        &kp LPAR      &kp RPAR      &i_circ       &i_trema      &u_grave 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
              &kp LA(SQT)   &trans       &trans       &trans      &trans        &trans        &trans        &trans        &trans        &trans        
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &trans       &trans      &kp APOS        &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &trans    &kp HOME   &kp UP     &kp END    &kp PAGE_UP    &kp C_VOL_UP &kp C_BRI_UP &trans &trans &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &trans    &kp LEFT   &kp DOWN   &kp RIGHT  &kp PAGE_DOWN  &kp C_VOL_DN &kp C_BRI_DN &trans        &trans &kp RIGHT_SHIFT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LG(Z)  &kp LG(X) &kp LG(C)  &kp LG(V)  &trans      &kp C_MUTE   &kp C_STOP    &kp C_PREV    &kp C_NEXT    &kp C_PP
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                                            &trans      &trans        &kp MEH(SPACE)        &kp MEH(BACKSPACE)
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        math_layer {
            // Also used for Aerospace
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
&kp MEH(F20) &kp MEH(GRAVE) &kp MEH(UP) &kp MEH(MINUS) &kp MEH(SINGLE_QUOTE) &kp KP_DIVIDE &kp N7        &kp N8        &kp N9 &kp KP_MULTIPLY
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
&kp MEH(LBKT) &kp MEH(LEFT) &kp MEH(DOWN) &kp MEH(RIGHT) &kp MEH(RBKT) &kp MINUS      &kp N4      &kp N5        &kp N6        &kp N0        
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────
&kp MEH(MINUS) &kp MEH(SLASH) &kp MEH(EQUAL) &kp MEH(BACKSLASH) &kp MEH(LBKT) &kp COMMA   &kp N1        &kp N2        &kp N3        &kp PERIOD
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                                            &kp LCMD        &kp DEL        &trans        &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        sym_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
 &kp CARET             &kp LT      &kp GT       &kp DOLLAR    &kp PERCENT        &kp AT      &kp AMPS      &kp STAR    &kp SQT &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
&kp LBRC    &kp LPAR     &kp RPAR      &kp RBRC      &kp EQUAL        &kp BSLH    &kp PLUS    &kp MINUS     &kp SLASH     &kp DQT      
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
              &kp TILDE   &kp LBKT     &kp RBKT      &kp UNDER     &kp HASH         &kp PIPE    &kp EXCL    &kp SEMICOLON &kp COLON     &kp QUESTION
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                                            &trans        &trans        &trans        &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        fn_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
&sys_reset             &bt BT_CLR    &bt BT_CLR_ALL &trans       &trans        &kp F10        &kp F7        &kp F8        &kp F9 &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
&trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp F11        &kp F4        &kp F5        &kp F6        &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
              &trans        &trans        &trans        &trans        &bt BT_SEL 4  &kp F13        &kp F1        &kp F2        &kp F3       &kp F12
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                                                        &bt BT_PRV        &bt BT_NXT    &trans        &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

    };
    
    combos {
        compatible = "zmk,combos";

        //     0  1  2  3  4     5  6  7  8  9
        //     10 11 12 13 14    15 16 17 18 19
        //     20 21 22 23 24    25 26 27 28 29
        //              30 31    32 33
        combo_caps_word {
            timeout-ms = <40>;
            key-positions = <20 29>;
            bindings = <&caps_word>;
            layers = <0>;
            require-prior-idle-ms = <200>;  
        };

        // Vim-inspired (old J-K)
        combo_exit {
            timeout-ms = <25>;
            key-positions = <22 23>;
            bindings = <&kp ESC>;
            // layers = <0>;
            require-prior-idle-ms = <125>;  
        };

        combo_ret {
            timeout-ms = <25>;
            key-positions = <28 27>;
            bindings = <&kp RET>;
            // layers = <0>;
            require-prior-idle-ms = <125>;  
        };
    
        // Braces combos
        // TODO Aerospace here
        // combo_col_1 {
        //     timeout-ms = <40>;
        //     key-positions = <1 11>;
        //     bindings = <&kp LEFT_BRACKET>;
        //     layers = <0>;
        //     require-prior-idle-ms = <100>;  
        // };

        // combo_col_2 {
        //     timeout-ms = <40>;
        //     key-positions = <2 12>;
        //     bindings = <&kp LEFT_PARENTHESIS>;
        //     layers = <0>;
        //     require-prior-idle-ms = <100>;  
        // };

        // combo_col_3 {
        //     timeout-ms = <40>;
        //     key-positions = <3 13>;
        //     bindings = <&kp LEFT_BRACE>;
        //     layers = <0>;
        //     require-prior-idle-ms = <100>;  
        // };

        // combo_col_4 {
        //     timeout-ms = <40>;
        //     key-positions = <6 16>;
        //     bindings = <&kp RIGHT_BRACE>;
        //     layers = <0>;
        //     require-prior-idle-ms = <100>;  
        // };

        // combo_col_5 {
        //     timeout-ms = <40>;
        //     key-positions = <7 17>;
        //     bindings = <&kp RIGHT_PARENTHESIS>;
        //     layers = <0>;
        //     require-prior-idle-ms = <100>;  
        // };

        // combo_col_6 {
        //     timeout-ms = <40>;
        //     key-positions = <8 18>;
        //     bindings = <&kp RIGHT_BRACKET>;
        //     layers = <0>;
        //     require-prior-idle-ms = <100>;  
        // };

    };

};
